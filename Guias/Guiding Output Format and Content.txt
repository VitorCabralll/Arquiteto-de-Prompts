Use Examples (Multishot Prompting)
Examples are your secret weapon shortcut for getting exactly what you need. By providing a few well-crafted examples in your prompt, you can dramatically improve the accuracy, consistency, and quality of outputs.
Power Up Your Prompts
Include 3-5 diverse, relevant examples to show exactly what you want. More examples = better performance, especially for complex tasks.
Why Use Examples?
●	Accuracy: Examples reduce misinterpretation of instructions.
●	Consistency: Examples enforce uniform structure and style.
●	Performance: Well-chosen examples boost ability to handle complex tasks.
Crafting Effective Examples
For maximum effectiveness, make sure that your examples are:
●	Relevant: Your examples mirror your actual use case.
●	Diverse: Your examples cover edge cases and potential challenges, and vary enough to prevent unintended pattern learning.
●	Clear: Your examples are wrapped in <example> tags (if multiple, nested within <examples> tags) for structure.
Example: Analyzing Customer Feedback
No Examples:
     Analyze this customer feedback and categorize the issues. Use these categories: UI/UX, Performance, Feature Request, Integration, Pricing, and Other. Also rate the sentiment (Positive/Neutral/Negative) and priority (High/Medium/Low).

Here is the feedback: {{FEEDBACK}}
   
With Examples:
     Our CS team is overwhelmed with unstructured feedback. Your task is to analyze feedback and categorize issues for our product and engineering teams. Use these categories: UI/UX, Performance, Feature Request, Integration, Pricing, and Other. Also rate the sentiment (Positive/Neutral/Negative) and priority (High/Medium/Low). Here is an example:

<example>
Input: The new dashboard is a mess! It takes forever to load, and I can't find the export button. Fix this ASAP!
Category: UI/UX, Performance
Sentiment: Negative
Priority: High
</example>

Now, analyze this feedback: {{FEEDBACK}}
Notice that in the "no examples" version, the AI provides a lengthy analysis with explanations, while the "with examples" version produces a more structured, consistent format that matches exactly what was demonstrated in the example.
Prefill Responses for Greater Output Control
When using AI models, you have the unique ability to guide responses by prefilling the assistant's message. This powerful technique allows you to direct actions, skip preambles, enforce specific formats like JSON or XML, and even help maintain character consistency in role-play scenarios.
In cases where the AI is not performing as expected, a few prefilled sentences can vastly improve performance. A little prefilling goes a long way!
How Prefilling Works
Prefilling involves providing the initial text that the AI's response should start with. The AI will then continue from where your prefilled text leaves off.
Examples
Controlling Output Formatting and Skipping the Preamble
Power user tip: Prefilling { forces the AI to skip the preamble and directly output the JSON object. This is cleaner, more concise, and easier for programs to parse without additional processing.
Without prefilling:
     Extract the name, size, price, and color from this product description as a JSON object:

<description>
The SmartHome Mini is a compact smart home assistant available in black or white for only $49.99. At just 5 inches wide, it lets you control lights, thermostats, and other connected devices via voice or app—no matter where you place it in your home. This affordable little hub brings convenient hands-free control to your smart devices.
</description>
   
With prefilling: (prefill with just the opening brace {)
     The AI will continue directly with the JSON content, skipping any explanatory text:

{
  "name": "SmartHome Mini",
  "size": "5 inches wide",
  "price": "$49.99",
  "colors": ["black", "white"]
}
   
Maintaining Character in Roleplay Scenarios
Role-play tip: Prefilling a bracketed [ROLE_NAME] can remind the AI to stay in character, even for longer and more complex conversations.
Without roleplay prefilling:
     What do you deduce about the owner of this shoe?
<image>muddy_shoe.jpg</image>
   
(AI might respond as itself rather than maintaining the character)
With roleplay prefilling:
     What do you deduce about the owner of this shoe?
<image>muddy_shoe.jpg</image>

[Sherlock Holmes]
   
(AI continues as Sherlock Holmes, maintaining the character voice and expertise)
